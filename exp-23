#include <stdio.h>

#define MAX_BLOCKS 10
#define MAX_PROCESSES 10

void firstFit(int blocks[], int blockCount, int processes[], int processCount) {
    int allocation[MAX_PROCESSES];
    for (int i = 0; i < processCount; i++) allocation[i] = -1;

    for (int i = 0; i < processCount; i++) {
        for (int j = 0; j < blockCount; j++) {
            if (blocks[j] >= processes[i]) {
                allocation[i] = j;
                blocks[j] -= processes[i];  // Reduce block size
                break;
            }
        }
    }

    printf("\nProcess No\tProcess Size\tBlock No\tBlock Size\n");
    for (int i = 0; i < processCount; i++) {
        if (allocation[i] != -1)
            printf("%d\t\t%d\t\t%d\t\t%d\n", i + 1, processes[i], allocation[i] + 1, blocks[allocation[i]]);
        else
            printf("%d\t\t%d\t\tNot Allocated\n", i + 1, processes[i]);
    }
}

int main() {
    int blocks[MAX_BLOCKS], processes[MAX_PROCESSES];
    int blockCount, processCount;

    printf("Enter the number of memory blocks: ");
    scanf("%d", &blockCount);
    printf("Enter the size of each block:\n");
    for (int i = 0; i < blockCount; i++) scanf("%d", &blocks[i]);

    printf("Enter the number of processes: ");
    scanf("%d", &processCount);
    printf("Enter the size of each process:\n");
    for (int i = 0; i < processCount; i++) scanf("%d", &processes[i]);

    firstFit(blocks, blockCount, processes, processCount);

    return 0;
}
